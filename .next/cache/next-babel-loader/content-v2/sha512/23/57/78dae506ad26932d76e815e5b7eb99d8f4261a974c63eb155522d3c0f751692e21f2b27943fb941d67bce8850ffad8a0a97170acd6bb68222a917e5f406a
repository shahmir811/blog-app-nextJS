{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shahmir/projects/udemy/maximillian/nextjs/complete-blog/pages/posts/[slug].js\";\nimport React from 'react';\nimport Head from 'next/head';\nimport PostContent from '../../components/post/post-detail/post-content';\nimport { getPostsFiles, getPostData } from '../../lib/posts-util';\n\nconst PostDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.post.excerpt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n      post: props.post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport function getStaticProps(ctx) {\n  const {\n    params\n  } = ctx;\n  const {\n    slug\n  } = params;\n  const postData = getPostData(slug);\n  return {\n    props: {\n      post: postData\n    },\n    revalidate: 600\n  };\n}\nexport function getStaticPaths() {\n  const postFilenames = getPostsFiles();\n  const slugs = postFilenames.map(fileName => fileName.replace(/\\.md$/, ''));\n  return {\n    paths: slugs.map(slug => ({\n      params: {\n        slug: slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport default PostDetailPage;","map":{"version":3,"sources":["/home/shahmir/projects/udemy/maximillian/nextjs/complete-blog/pages/posts/[slug].js"],"names":["React","Head","PostContent","getPostsFiles","getPostData","PostDetailPage","props","post","title","excerpt","getStaticProps","ctx","params","slug","postData","revalidate","getStaticPaths","postFilenames","slugs","map","fileName","replace","paths","fallback"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC/B,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,IAAN,CAAWC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,IAAN,CAAWE;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEH,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AASA,CAVD;;AAYA,OAAO,SAASG,cAAT,CAAwBC,GAAxB,EAA6B;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,GAAnB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWD,MAAjB;AAEA,QAAME,QAAQ,GAAGV,WAAW,CAACS,IAAD,CAA5B;AACA,SAAO;AACNP,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAEO;AAAR,KADD;AAENC,IAAAA,UAAU,EAAE;AAFN,GAAP;AAIA;AAED,OAAO,SAASC,cAAT,GAA0B;AAChC,QAAMC,aAAa,GAAGd,aAAa,EAAnC;AAEA,QAAMe,KAAK,GAAGD,aAAa,CAACE,GAAd,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAA9B,CAAd;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAEJ,KAAK,CAACC,GAAN,CAAUN,IAAI,KAAK;AAAED,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEA;AAAR;AAAV,KAAL,CAAd,CADD;AAENU,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA;AAED,eAAelB,cAAf","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\n\nimport PostContent from '../../components/post/post-detail/post-content';\nimport { getPostsFiles, getPostData } from '../../lib/posts-util';\n\nconst PostDetailPage = props => {\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{props.post.title}</title>\n\t\t\t\t<meta name='description' content={props.post.excerpt} />\n\t\t\t</Head>\n\t\t\t<PostContent post={props.post} />\n\t\t</>\n\t);\n};\n\nexport function getStaticProps(ctx) {\n\tconst { params } = ctx;\n\tconst { slug } = params;\n\n\tconst postData = getPostData(slug);\n\treturn {\n\t\tprops: { post: postData },\n\t\trevalidate: 600,\n\t};\n}\n\nexport function getStaticPaths() {\n\tconst postFilenames = getPostsFiles();\n\n\tconst slugs = postFilenames.map(fileName => fileName.replace(/\\.md$/, ''));\n\n\treturn {\n\t\tpaths: slugs.map(slug => ({ params: { slug: slug } })),\n\t\tfallback: false,\n\t};\n}\n\nexport default PostDetailPage;\n"]},"metadata":{},"sourceType":"module"}